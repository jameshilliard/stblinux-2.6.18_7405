
#ifndef _HUMAX_GENKERNEL_GPIO_H_
#define _HUMAX_GENKERNEL_GPIO_H_


#if defined(CONFIG_MIPS_BCM7325)
#include <asm/brcmstb/brcm97325b0/bchp_common.h>
#include <asm/brcmstb/brcm97325b0/bcmmips.h>
#endif

#if defined(CONFIG_MIPS_BCM7335)
#include <asm/brcmstb/brcm97335b0/bchp_common.h>
#include <asm/brcmstb/brcm97335b0/bcmmips.h>
#endif

#if defined(CONFIG_MIPS_BCM7405)
#include <asm/brcmstb/brcm97405b0/bchp_common.h>
#include <asm/brcmstb/brcm97405b0/bcmmips.h>
#endif

#if defined(HUMAX_NOR_WP_GPIO)
	#define GPIO_FLASH_WP_GIO			HUMAX_NOR_WP_GPIO
#else
#if defined(CONFIG_MIPS_BCM7325)
#define GPIO_FLASH_WP_GIO			31
#endif

#if defined(CONFIG_MIPS_BCM7335)
#define GPIO_FLASH_WP_GIO			50
#endif

	#if defined(HUMAX_KBW) || (defined(HUMAX_SKYD) && defined(CONFIG_MIPS_BCM7405))
	#define GPIO_FLASH_WP_GIO		73 /* 65(GPIO)+ 8(SGPIO)*/
#endif

#if defined(HUMAX_KDG)
	#define GPIO_FLASH_WP_GIO		15
#endif
#endif

#define GPIO_GROUP_0_REG_START	(BCHP_PHYSICAL_OFFSET + BCHP_GIO_REG_START) /*GIO_ODEN_LO. [31:0]*/
#define GPIO_GROUP_1_REG_START	(BCHP_PHYSICAL_OFFSET + 0x00400720) /*GIO_ODEN_HI. [58:32]*/
#define GPIO_ODEN_REG_OFFSET		0x00
#define GPIO_DATA_REG_OFFSET		0x04
#define GPIO_IODIR_REG_OFFSET		0x08

#define GPIO_GROUP_NUM_PIN		32
#define GPIO_GROUP_GAP				(GPIO_GROUP_1_REG_START - GPIO_GROUP_0_REG_START)
#define GPIO_WHICH_GROUP(PIN)	(PIN/GPIO_GROUP_NUM_PIN)
#define GPIO_REG_BASE(PIN)			(GPIO_GROUP_0_REG_START + GPIO_GROUP_GAP * GPIO_WHICH_GROUP(PIN))

#define GPIO_PIN_SHIFT_NUM(PIN)	(PIN % GPIO_GROUP_NUM_PIN)

#define WRITE_REG32(WDATA, WADDR) 	(*((volatile unsigned long *)(BCM_PHYS_TO_K1(WADDR)))=(unsigned long)WDATA)
#define READ_REG32(RADDR) 			(*((volatile unsigned long *)(BCM_PHYS_TO_K1(RADDR))))

#define GPIO_CONFIG_PIN_OUT_TOTEM_POLE(PIN) do {\
			WRITE_REG32(READ_REG32(GPIO_REG_BASE(PIN)+GPIO_IODIR_REG_OFFSET) & (~(0x01 << (GPIO_PIN_SHIFT_NUM(PIN)))), GPIO_REG_BASE(PIN)+GPIO_IODIR_REG_OFFSET);\
			WRITE_REG32(READ_REG32(GPIO_REG_BASE(PIN)+GPIO_ODEN_REG_OFFSET) & (~(0x01 << (GPIO_PIN_SHIFT_NUM(PIN)))), GPIO_REG_BASE(PIN)+GPIO_ODEN_REG_OFFSET);\
		} while(0)
#define GPIO_CONFIG_PIN_OUT_OPEN_DRAIN(PIN) do {\
			WRITE_REG32(READ_REG32(GPIO_REG_BASE(PIN)+GPIO_IODIR_REG_OFFSET) & (~(0x01 << (GPIO_PIN_SHIFT_NUM(PIN)))), GPIO_REG_BASE(PIN)+GPIO_IODIR_REG_OFFSET);\
			WRITE_REG32(READ_REG32(GPIO_REG_BASE(PIN)+GPIO_ODEN_REG_OFFSET) | (0x01 << (GPIO_PIN_SHIFT_NUM(PIN))), GPIO_REG_BASE(PIN)+GPIO_ODEN_REG_OFFSET);\
		} while(0)
#define GPIO_CONFIG_PIN_INPUT(PIN) do {\
			WRITE_REG32(READ_REG32(GPIO_REG_BASE(PIN)+GPIO_IODIR_REG_OFFSET) | (0x01 << (GPIO_PIN_SHIFT_NUM(PIN))), GPIO_REG_BASE(PIN)+GPIO_IODIR_REG_OFFSET);\
		} while(0)

#define GPIO_SET_PIN(PIN) do {\
			WRITE_REG32(READ_REG32(GPIO_REG_BASE(PIN)+GPIO_DATA_REG_OFFSET) | (0x01 << (GPIO_PIN_SHIFT_NUM(PIN))), GPIO_REG_BASE(PIN)+GPIO_DATA_REG_OFFSET);\
		} while(0)
#define GPIO_CLEAR_PIN(PIN) do{\
			WRITE_REG32(READ_REG32(GPIO_REG_BASE(PIN)+GPIO_DATA_REG_OFFSET) & (~(0x01 << (GPIO_PIN_SHIFT_NUM(PIN)))), GPIO_REG_BASE(PIN)+GPIO_DATA_REG_OFFSET);\
		} while(0)
#define GPIO_GET_PIN(PIN)  (\
			(READ_REG32(GPIO_REG_BASE(PIN)+GPIO_DATA_REG_OFFSET) & (0x01 << GPIO_PIN_SHIFT_NUM(PIN))) ? 1 : 0\
		)
#define GPIO_CONFIG_PIN_OUTPUT(PIN) do {\
			WRITE_REG32(READ_REG32(GPIO_REG_BASE(PIN)+GPIO_IODIR_REG_OFFSET) & (~(0x01 << (GPIO_PIN_SHIFT_NUM(PIN)))), GPIO_REG_BASE(PIN)+GPIO_IODIR_REG_OFFSET);\
		} while(0)		
#endif	/* _HUMAX_7325_GENKERNEL_GPIO_H_ */
